/* Swift 5: Protocol oriented programming */
/* Chapter 2 challenge - Remove tight coupling */
/* repeat times: 0 */

/* Sources.swift */

import Foundation

public class AmazonService {
    private var balance: Float = 0
    
    public init() {}
    
    public func orderPlaced(payment: Float) {
        balance += payment
    }
    
    public var earnings: Float {
        return balance
    }
}

public class EtsyService {
    private var earnings: Float = 0
    
    public init() {}
    
    public func itemSold(profit: Float) {
        earnings += profit
    }
    
    public var totalSold: Float {
        return earnings
    }
}


/* Contents.swift */
class PaymentController {
    let amazonService: AmazonService
    let etsyService: EtsyService
    
    init(amazon: AmazonService, etsy: EtsyService) {
        amazonService = amazon
        etsyService = etsy
    }
    
    func calculateEarnings() -> Float {
        amazonService.earnings + etsyService.totalSold
    }
}

let amazonService = AmazonService()
let etsyService = EtsyService()

let controller = PaymentController(amazon: amazonService, etsy: etsyService)

amazonService.orderPlaced(payment: 100)
etsyService.itemSold(profit: 25)
amazonService.orderPlaced(payment: 12.50)

print("Total earned: \(controller.calculateEarnings())")

